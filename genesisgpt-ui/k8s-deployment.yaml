apiVersion: apps/v1
kind: Deployment
metadata:
  name: genesisgpt-ui
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: genesisgpt-ui
  template:
    metadata:
      labels:
        app: genesisgpt-ui
    spec:
      containers:
      - name: genesisgpt-ui
        image: your-registry/genesisgpt-ui:latest
        ports:
        - containerPort: 3000
        env:
        - name: GENESISGPT_URL
          value: "http://genesisgpt-service:8090"
---
apiVersion: v1
kind: Service
metadata:
  name: genesisgpt-ui-service
  namespace: default
spec:
  selector:
    app: genesisgpt-ui
  ports:
  - protocol: TCP
    port: 80
    targetPort: 3000
  type: LoadBalancer  # Or NodePort/ClusterIP based on your needs
---
# Update GenesisGpt deployment to run as server
apiVersion: apps/v1
kind: Deployment
metadata:
  name: genesisgpt-server
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: genesisgpt-server
  template:
    metadata:
      labels:
        app: genesisgpt-server
    spec:
      containers:
      - name: genesisgpt
        image: your-registry/genesisgpt:latest
        command: ["./genesisgpt", "server"]
        ports:
        - containerPort: 8090
        env:
        - name: OPENAI_API_KEY
          valueFrom:
            secretKeyRef:
              name: openai-secret
              key: api-key
        - name: GINTOOLS_URL
          value: "http://gintools-service:8080"
        - name: PORT
          value: "8090"
---
apiVersion: v1
kind: Service
metadata:
  name: genesisgpt-service
  namespace: default
spec:
  selector:
    app: genesisgpt-server
  ports:
  - protocol: TCP
    port: 8090
    targetPort: 8090
  type: ClusterIP